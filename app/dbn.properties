# settings for dbn, similar to those used with the applet
# version. edit these only if you know what you're doing.

#display_mode=auto
display_mode=flush_more
run_mode=edit

bg_color=#336699
text_color=#ffffff

width=600
height=350

#program=tomokodbn/dbn1.dbn
#program=tomokodbn/dbn2.dbn
#program=tomokodbn/dbn3.dbn
#program=tomokodbn/dbn4.dbn
#program=tomokodbn/dbn5.dbn
#program=tomokodbn/dbn6.dbn
#program=tomokodbn/dbn7.dbn

# testing variables
#inline_program=set a 20; line a a 10 10

# testing repeat
#inline_program=repeat a 0 100;{;line a 0 a 100;};

# nested repeat
inline_program=repeat a 0 100;{;repeat b 0 100;{;set [a b] (a+b);};}

# calling a command
#inline_program=command linea a b c d;{;line a b c d;};linea 10 10 90 90

# executing a function
#inline_program=number linea a b;{;line 10 10 90 90;value (a+b);};set c <linea 5 10>;line c 0 c 100

# running a forever and making sure it's possible to stop
#inline_program=forever;{;paper <mouse 1>;}

# testing math bug
#inline_program=set a 25;set b (a+50);paper b

# testing dbngraphics
#inline_program=load dbngraphics.dbn;testdbngraphics

# testing dbnletters
#program=dbnletters.dbn
#inline_program=load dbnletters.dbn;testdbnletters

# testing negative values inside math
#inline_program=set a 50;line (-a) 0 (-a) 100

# testing repeat with extra spaces
#inline_program=repeat a 0 100;;{;line a 0 a 100;};

#program=stack-killer.dbn

# testing negated values
#inline_program=set a 50;line (-a) 20 20 (-a)
